<% if(config.algolia) { %>
<%- algolia_search() %>
<%- algolia_search_config() %>
<% } %>

<div id="search" class="container" style="min-height:700px">

    <div class="card shadow rounded flex-row border-0 mt-3 d-flex justify-content-center" style="width:100%; height:60px;">
        <form class="form-inline">
            <b-form-input v-model="keyword" class="mr-2"></b-form-input>
            <b-button @click="search(page_number)" :disabled="loading">搜索</b-button>
        </form>
    </div>

    <b-card v-for="(result, index) of results" :key="index" class="mt-3 shadow border-0">

        <!-- title -->
        <h4 class="card-title text-truncate" :title="result.title">
            <a :href="result.link" class="text-dark text-decoration-none" target="_blank">
                {{ result.title }}
            </a>
            <small>{{ result?.version }}</small>
            <!-- score -->
            <span v-if="result.score" style="margin-top:0.6em;float:right;">
                <b-progress :value="result.score" variant="dark" class="w-25"></b-progress>  
            </span>
        </h4>

        <!-- desc -->
        <p>
            {{ result?.desc }}
        </p>

        <!-- flag -->
        <p>       
            <span v-for="(desc, flag) of result.flags" :key="index">
                <b-badge variant="warning" class="mr-1">
                    {{ flag }}
                </b-badge>
            </span>    
        </p>

        <!-- keyword -->
        <p>       
            <span v-for="(keyword, index) of result.keywords" :key="index">
                <b-badge variant="secondary" class="mr-1">
                    {{ keyword }}
                </b-badge>
            </span>    
        </p>

        <!-- date -->
        <span class="text-secondary">{{ dayjs(result.date).format('YYYY-M-D') }}</span>

        <!-- author -->
        <span class="text-secondary">{{ result?.author }}</span>
        
    </b-card>

    <div class="mt-3" v-if="results.length">
        <b-pagination :align="'center'" v-model="page_number" :total-rows="total" :per-page="page_size" @change="search" last-number></b-pagination>
    </div>
    
</div>


<script>
    new Vue({
        el: 'div#search',
        data: {
            keyword: '',
            page_number:1,
            page_size:10,
            total:0,
            loading:false,
            results: []
        },
        methods: {
            async search(page) {

                NProgress.start()
                this.loading = true

                if(document.querySelector('meta[property="algolia:search"]')) {
                    var {total, results} = await this.npmsearch(page, this.page_size)
                } else {
                    var {total, results} = await this.algoliasearch(page, this.page_size)
                }
                
                this.results = results;
                this.total = total;

                NProgress.done()
                this.loading = false

            },
            // use npms api to search npm module
            async npmsearch(page = 1, pagesize = 10) {
                let { total, results } = await axios.get('https://api.npms.io/v2/search', {
                    params: {
                        q: this.keyword,
                        from: (page - 1) * pagesize,
                        size: pagesize,
                    }
                })
                .then(resp => resp.data)
                .catch(e => this.alert = `服务维护中，请稍后再访问`)

                results = results.map(result => {
                    return {
                        title: result.package.name,
                        version: result.package.version,
                        author: result.package.author?.name,
                        score: result.score.detail.popularity*100,
                        desc: result.package.description,
                        keywords: result.package.keywords,
                        flags: result.flags,
                        date: result.package.date,
                        link: result.package.links?.homepage || result.package.links?.npm
                    }
                })

                return {total, results}
            },
            async algoliasearch(page = 1, pagesize = 10) {
                const algoliaConfig = document.querySelector('meta[property="algolia:search"]').dataset;
                const client = algoliasearch(algoliaConfig.applicationId, algoliaConfig.apiKey)
                const index = client.initIndex(algoliaConfig.indexName)

                let results = await index.search(this.keyword, {
                    page: page - 1,
                    hitsPerPage: pagesize,
                })

                let total = results.nbHits

                results = results.hits.map(result => {
                    return {
                        title: result.title,
                        date: dayjs(result.date).format('YYYY-M-D'),
                        link: result.permalink                       
                    }
                })

                return {total, results}

            },
            test() {
                setTimeout(() => {
                    this.keyword = '销售'
                    this.search()
                }, 100)
            },            
        },
        mounted() {       
            // this.test()
        }
    })
</script>